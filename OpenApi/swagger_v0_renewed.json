{
  "openapi": "3.1.0",
  "info": {
    "title": "PxWeb",
    "description": "Official statistical data from Norway",
    "version": "v0.0.1"
  },
  "servers": [
    {
      "url": "https://data.qa.ssb.no"
    }
  ],
  "paths": {
    "/api/v0/{lang}/table": {
      "get": {
        "summary": "Finds table tableIds based on a search query",
        "description": "Step 1 request: Lists all tables with ID, but without statistics. Use this request to find relevant tables. If the user speaks another language than Norwegian, translate their request into English. Query formatting '(Residential AND Property) OR (Price AND Index)', remember to use ()",
        "operationId": "getTables",
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "description": "Two letter language code (ISO 639). If an unsupported language code is provided, the default language (English) will be used.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "explode": false,
            "allowReserved": false,
            "schema": {
              "type": "string",
              "enum": ["en", "no"],
              "minLength": 2,
              "maxLength": 2
            },
            "example": "en"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Perform a free-text search for tables using an AND/OR search logic. This search accepts multiple keywords and synonyms. For improved results, include both synonyms and the original search terms in the query parameters.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "explode": false,
            "allowReserved": false,
            "schema": {
              "type": "string"
            },
            "example": "(Residential AND Property) OR (Price AND Index)"
          }
        ],
        "deprecated": false
      }
    },
    "/api/v0/{lang}/table/{id}": {
      "get": {
        "tags": [
          "Table"
        ],
        "summary": "Get valid variables and values for 'GetTableDataByPost', from a tabel with id: {id}.",
        "description": "Step 2 request: Used for listing all valid variables and values about a specific table. These variables and values are needed to generate a valid request to 'GetTableDataByPost' ",
        "operationId": "GetValidVariablesAndValuesById",
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "description": "Two letter language code (ISO 639). If an unsupported language code is provided, the default language (English) will be used.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "explode": false,
            "allowReserved": false,
            "schema": {
              "type": "string",
              "enum": ["en", "no"],
              "minLength": 2,
              "maxLength": 2
            },
            "example": "en"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for each table. It consists of 5 numbers.",
            "required": true,
            "schema": {
              "type": "string"
            },
             "example": "12880"
          }
        ]
      }
    ,

    "post": {
        "tags": [
          "Table"
        ],
    "summary": "Get data from table by {id}.",
    "description": "Step 3 request. Always query the 'getTables' first, then query 'GetValidVariablesAndValuesById', and at last query this request with the valid variabl and values. ",
    "operationId": "GetTableDataByPost",
    "parameters": [
          {
            "name": "lang",
            "in": "path",
            "description": "Two letter language code (ISO 639). If an unsupported language code is provided, the default language (English) will be used.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "explode": false,
            "allowReserved": false,
            "schema": {
              "type": "string",
              "enum": ["en", "no"],
              "minLength": 2,
              "maxLength": 2
            },
            "example": "en"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for each table. It consists of 5 numbers.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
    ],
    "requestBody": {
     "description": "Request body for selecting specific data from a table. Each selection object corresponds to a variable in the table, specifying filter criteria. Always fetch all valid variables and values from 'GetValidVariablesAndValuesById', and use minimum one value for each variables ",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
			         "query": {
			           "type": "array",
                 "description": "An array of holding selection criteria for each variable.",
                 "items": {
			              "type": "object",
                    "properties": {
					              "code": {
                           "type": "string",
                           "description": "The code of the variable to be queried (e.g., 'Kjonn', 'Alder')."
                        },
                        "selection": {
                            "type": "object",
                            "description": "Details of an individual selection criterion.",
                            "properties": {
                                 "filter": {
                                    "type": "string",
                                    "enum": ["item"],
                                     "description": "Type of filter applied to the selection. Currently, only 'item' is supported."
                                 },
                                 "values": {
                                    "type": "array",
                                    "minItems": 1,
                                    "description": "An array of selected values for the variable. Values depend on the variable's code.",
                                    "items": {
                                        "type": "string",
                                        "description": "A specific code value within the variable's code list."
                                    }
                                 }
							              }
						            }
                    },
                    "required": ["code", "selection"]
                   }
               },
               "response": {
                   "type": "object",
                   "description": "Details of an response",
                   "properties": {
                       "format": {
                          "type": "string",
                          "description": "Format of the response. Options are 'px'."
                        }
                   }
               }
            }
          }


        }
      }
    },
    "responses": {

    }
  }
    }
  },
  "components": {
    "schemas": {}
  }
}
